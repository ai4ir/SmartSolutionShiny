category[i] <- "잔류"
} else if(varName[i] %in% tidyingList[["addedVar"]]) {
category[i] <- "추가"
}
}
dfTable <- dfTable %>% mutate(lable=label, labelShort=labelShort, category=category)
View(dfTable)
View(tidyingList)
runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
library(shiny); runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
View(DFSource)
runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
dim(DFSource)
runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
dim(DFSource)
runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
df <- curSampleExplore
runApp('SmartSolutionMain.R')
View(cTreeList)
View(cTreeList)
View(rangerList)
df <- curSampleExplore
selVar <- cTreeList[["varX"]]
targetVar <- cTreeList[["varY"]]
selVar
runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
library(shiny); runApp('SmartSolutionMain.R')
library(shiny); runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
library(shiny); runApp('SmartSolutionMain.R')
library(shiny); runApp('SmartSolutionMain.R')
df <- read_xlsx("../SourceData/210510 EH47BCA_NRL.v1 2/210510 EH47BCA_NRL.v1 2.xlsx",
sheet=1,
skip=1, col_names=FALSE)
library(shiny); runApp('SmartSolutionMain.R')
df <- read_xlsx("../SourceData/210510 EH47BCA_NRL.v1 2/210510 EH47BCA_NRL.v1 2.xlsx",
sheet=1,
skip=1, col_names=FALSE)
write_rds(df, "../SourceData/210510 EH47BCA_NRL.v1 2/210510 EH47BCA_NRL.v1 2.rds")
chosenDFSourceFile <<- "EH47BCA"
df <- read_rds("../SourceData/210510 EH47BCA_NRL.v1 2/210510 EH47BCA_NRL.v1 2.rds")
runApp('SmartSolutionMain.R')
df <- read_xlsx("../SourceData/210510 EH47BCA_NRL.v1 2/210510 EH47BCA_NRL.v1 2.xlsx",
sheet=2,
skip=1, col_names=FALSE)
write_rds(df, "../SourceData/210510 EH47BCA_NRL.v1 2/210510 EH47BCA_NRL.v1 2.rds")
runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
summary(DFSource$PlateThickness)
dim(DFSource)
df <- read_xlsx("../SourceData/EH47BCA/210510 EH47BCA_NRL.v1 2.xlsx",
sheet=2,
skip=1, col_names=FALSE)
write_rds(df, "../SourceData/EH47BCA/210510 EH47BCA_NRL.v1 2.rds")
runApp('SmartSolutionMain.R')
View(cTreeList)
View(cTreeList)
runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
View(cTreeList)
runApp('SmartSolutionMain.R')
library(shiny); runApp('SmartSolutionMain.R')
library(shiny); runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
library(shiny); runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
library(shiny); runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
library(shiny); runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
library(shiny); runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
View(aesList)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
removeVar <- NA
var <- setdiff(colnames(curSampleExplore),removeVar)
dim(var)
var
library(shiny); runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
library(shiny); runApp('SmartSolutionMain.R')
View(DFSource)
runApp('SmartSolutionMain.R')
View(DFSource)
runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
View(DFSource)
runApp('SmartSolutionMain.R')
View(DFSource)
runApp('SmartSolutionMain.R')
dim(df)
DFSource <<- read_rds("../SourceData/EH47BCA/210510 EH47BCA_NRL.v1 2_전처리.rds")
View(DFSource)
runApp('SmartSolutionMain.R')
View(dfAll)
View(DFSource)
runApp('SmartSolutionMain.R')
View(DFSource)
runApp('SmartSolutionMain.R')
Voew(DFSource)
View(DFSource)
View(dfAll)
runApp('SmartSolutionMain.R')
View(DFSource)
runApp('SmartSolutionMain.R')
View(DFSource)
runApp('SmartSolutionMain.R')
View(DFSource)
df <- DFSource
max(df$SRT_1stZoneTemp, df$SRT_2ndZoneTemp, df$SRT_3rdZoneTemp, df$SRT_HomogenousTemp)
pmax(df$SRT_1stZoneTemp, df$SRT_2ndZoneTemp, df$SRT_3rdZoneTemp, df$SRT_HomogenousTemp)
runApp('SmartSolutionMain.R')
View(DFSource)
runApp('SmartSolutionMain.R')
library(shiny); runApp('SmartSolutionMain.R')
library(shiny); runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
df <- read_rds("../SourceData/tensileHeat/210312/16_20년도수정(0312)/16년_중복제거_210312.rds")
df2 <- read_rds("../SourceData/tensileHeat/210312/16_20년도수정(0312)/17년_중복제거_210312.rds")
df <- rbind(df, df2)
df2 <- read_rds("../SourceData/tensileHeat/210312/16_20년도수정(0312)/18년_중복제거_210312.rds")
df <- rbind(df, df2)
df2 <- read_rds("../SourceData/tensileHeat/210312/16_20년도수정(0312)/19년_중복제거_210312.rds")
df <- rbind(df, df2)
df2 <- read_rds("../SourceData/tensileHeat/210312/16_20년도수정(0312)/20년_중복제거_210312.rds")
df <- rbind(df, df2)
incProgress(0.2)
filePath <- "../SourceData/tensileHeat/210312/16_20년도수정(0312)/tensileHeat_meta_210312_중복삭제_valid.xlsx"
df <- attachAttr(filePath, df)
df <- df[df$TensileShape %in% c("판상", "봉상"),]
identifierGrCMn <- c("XX")
# identifierGrNbVTi <- as.data.frame(read_xls("../SourceData/tensileHeat/210312/16_20년도수정(0312)/출강목표별 합금성분 구분기준.xls",
#                  sheet=1, skip=2, range="B3:B42",col_names=FALSE))[,1] %>%  as.vector()
# identifierGrCrMo <- as.data.frame(read_xls("../SourceData/tensileHeat/210312/16_20년도수정(0312)/출강목표별 합금성분 구분기준.xls",
#                                             sheet=1, skip=2, range="C3:C182",col_names=FALSE))[,1] %>%  as.vector()
# identifierGrCuNi <- as.data.frame(read_xls("../SourceData/tensileHeat/210312/16_20년도수정(0312)/출강목표별 합금성분 구분기준.xls",
#                                             sheet=1, skip=2, range="D3:D56",col_names=FALSE))[,1] %>%  as.vector()
identifierGrNbVTi <- as.data.frame(read_xls("../SourceData/tensileHeat/210312/16_20년도수정(0312)/출강목표별 합금성분 구분기준_수정본.xls",
sheet=1, skip=2, range="B3:B22",col_names=FALSE))[,1] %>%  as.vector()
identifierGrCrMo <- as.data.frame(read_xls("../SourceData/tensileHeat/210312/16_20년도수정(0312)/출강목표별 합금성분 구분기준_수정본.xls",
sheet=1, skip=2, range="C3:C51",col_names=FALSE))[,1] %>%  as.vector()
identifierGrCuNi <- as.data.frame(read_xls("../SourceData/tensileHeat/210312/16_20년도수정(0312)/출강목표별 합금성분 구분기준_수정본.xls",
sheet=1, skip=2, range="D3:D86",col_names=FALSE))[,1] %>%  as.vector()
func1 <- function(identifier) {
if(identifier %in% identifierGrCuNi) {
grCCC <- "CuNi"
} else if(identifier %in% identifierGrCrMo) {
grCCC <- "CrMo"
} else if(identifier %in% identifierGrNbVTi) {
grCCC <- "NbVTi"
} else if(identifier %in% identifierGrCMn) {
grCCC <- "CMn"
} else {
grCCC <- "GrFail"
}
return(grCCC)
}
incProgress(0.3)
grCCC <- vapply(str_sub(df[,"ChemicalCompositionCode"],9,10),func1, FUN.VALUE=character(1))
df <- df %>% mutate(grCCC=grCCC)
df <- as.data.frame(df)
attr(df[,"grCCC"], "label") <- "출강목표 그룹" ;
attr(df[,"grCCC"], "labelShort") <- "출강목표 그룹" ;
# setdiff(unique(str_sub(df$ChemicalCompositionCode,9,10)),c(identifierGrCMn,identifierGrNbVTi,identifierGrCrMo,identifierGrCuNi))
bVec1 <- df$Nb<0.003 & df$V<0.0015 & df$Ti<0.0035 & df$Cu<0.07 & df$Ni<0.035 & df$Cr<0.07 & df$Mo<0.015
bVec2 <- df$Mn>0.8 & df$Cu<0.07 & df$Ni<0.035 & df$Cr<0.07 & df$Mo<0.015
bVec3 <- df$Mn>0.8 & df$Cr<0.07 & df$Mo<0.015
bVec4 <- df$Mn>0.8
grCCC2 <- ifelse(bVec1,"CMn", ifelse(bVec2,"NbVTi",ifelse(bVec3,"CuNi",ifelse(bVec4,"CrMo","etc"))))
df <- df %>% mutate(grCCC2=grCCC2)
attr(df[,"grCCC2"], "label") <- "출강목표 그룹2" ;
attr(df[,"grCCC2"], "labelShort") <- "출강목표 그룹2" ;
table(df$grCCC)
table(df$grCCC2)
runApp('SmartSolutionMain.R')
library(shiny); runApp('SmartSolutionMain.R')
library(shiny); runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
library(shiny); runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
C <- chol(S <- toeplitz(.9 ^ (0:31))) # Cov.matrix and its root
all.equal(S, crossprod(C))
set.seed(17)
X <- matrix(rnorm(32000), 1000, 32)
Z <- X %*% C  ## ==>  cov(Z) ~=  C'C = S
all.equal(cov(Z), S, tol = 0.08)
pZ <- prcomp(Z, tol = 0.1)
summary(pZ) # only ~14 PCs (out of 32)
## or choose only 3 PCs more directly:
pz3 <- prcomp(Z, rank. = 3)
summary(pz3) # same numbers as the first 3 above
stopifnot(ncol(pZ$rotation) == 14, ncol(pz3$rotation) == 3,
all.equal(pz3$sdev, pZ$sdev, tol = 1e-15)) # exactly equal typically
## signs are random
require(graphics)
## the variances of the variables in the
## USArrests data vary by orders of magnitude, so scaling is appropriate
prcomp(USArrests)  # inappropriate
prcomp(USArrests, scale = TRUE)
prcomp(~ Murder + Assault + Rape, data = USArrests, scale = TRUE)
plot(prcomp(USArrests))
summary(prcomp(USArrests, scale = TRUE))
runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
View(curSampleExplore)
runApp('SmartSolutionMain.R')
View(df)
runApp('SmartSolutionMain.R')
View(curSampleExplore)
runApp('SmartSolutionMain.R')
library(shiny); runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
library(shiny); runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
library(shiny); runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
library(shiny); runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
library(shiny); runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
chosenDFSourceFile <<- "EH47BCA"
pathTidyingReport <<- "../USER/EH47BCA/output"
df <- read_rds("../SourceData/EH47BCA/210510 EH47BCA_NRL.v1 2.rds")
# df <- rbind(df1, df2)
# df <- df2
filePath <- "../SourceData/EH47BCA/210510 EH47BCA_NRL_meta.xlsx"
df <- attachAttr(filePath, df)
# # 쓰레기 데이터 제거
# df <- df[df$Tensile_Shape %in% c("판상", "봉상"),]
#  factor 변수 지정
catVar <- c("TensileShape" ,"TensileSpecimenDirection", "Factory", "ManufaturingProcess",
"RollingMode", "RollingModeDirection", "SRT_FurnanceNo",
"RollingMeasureCode","NRL_FirstTest",
"CCMachine", "MslabCharicteristic", "TensileShapeCode")
for(var in catVar) {
df[,var] <- as.factor(df[,var])
}
filePath <- "../SourceData/EH47BCA/210510 EH47BCA_NRL_meta.xlsx"
df <- attachAttr(filePath, df)
# 생산월 데이터 추가
month <- month(unsticky(df$DecisionDate))
df <- df %>% mutate(month=month)
attr(df[,"month"],"label") <- "생산 월"
attr(df[,"month"],"labelShort") <- "생산 월"
attr(df[,"month"],"digit") <- 0
attr(df[,"month"],"validMin") <- 1
attr(df[,"month"],"validMax") <- 12
df <- addTransVarTaskSteelPlate(df)
df <- addTransVarEachEH47BCA(df)
df <- sticky_all(df)
dfAll <<- df
is.na(df$PWHTTemp)
!is.na(df$PWHTTemp)
sum(!is.na(df$PWHTTemp))
varNA <- NULL
for(x in colnames(df)) {
if(sum(!is.na(df[,x]))==0) {
varNA <- c(varNA,x)
}
}
varNA
length(varNA)
varNA <- c("HeatTreatmentTemp", "HeatTreatmentTime")
varNA <- c(varNA, "PWHTTemp", "PWHTTempRnage", "PWHTTime", "PWHTCycle","NORTemp", "NORTemp", "NORTime",
"NORCycle", "PWHTTemp_Add1", "PWHTTempRnage_Add1", "PWHTTime_Add1", "PWHTCycle_Add1", "NORTemp_Add1",
"NORTempRnage_Add1", "NORTime_Add1", "NORCycle_Add1", "PWHTTemp_Add2", "PWHTTempRnage_Add2",
"PWHTTime_Add2", "PWHTCycle_Add2", "NORTemp_Add2", "NORTempRnage_Add2", "NORTime_Add2",
"NORCycle_Add2")
varNA <- c(varNA, "DWTTTempCode", "DWTTTemp", "DWTT_Ind1", "DWTT_Ind2", "DWTT_Ind3", "DWTT_Avg",
"HIC_CLR_Ind1", "HIC_CLR_Ind2", "HIC_CLR_Ind3", "HIC_CLR_Ind4", "HIC_CLR_Ind5", "HIC_CLR_Ind6",
"HIC_CLR_Ind7", "HIC_CLR_Ind8", "HIC_CLR_Ind9", "HIC_CTR_Ind1", "HIC_CTR_Ind2", "HIC_CTR_Ind3",
"HIC_CTR_Ind4", "HIC_CTR_Ind5", "HIC_CTR_Ind6", "HIC_CTR_Ind7", "HIC_CTR_Ind8", "HIC_CTR_Ind9")
varNA <- c(varNA, "CVNTempCode", "CVNTempCode_Add1", "CVN_Ind3",
"CVNTempCode_Add2", "CVNTemp_Add2",  "CVN_Ind1_Add2", "CVN_Ind2_Add2", "CVN_Ind3_Add2", "CVN_Avg_Add2",
"CVNTempCode_Add3", "CVNTemp_Add3", "CVN_Ind1_Add3", "CVN_Ind2_Add3", "CVN_Ind3_Add3", "CVN_Avg_Add3")
length(varNA)
runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
View(tidyingList)
runApp('SmartSolutionMain.R')
############################################ salesRecord ##############################
tidySource <- function() {
# df <- read_xlsx("../SourceData/EH47BCA/210510 EH47BCA_NRL.v1 2.xlsx",
#                             sheet=2,
#                             skip=1, col_names=FALSE)
# write_rds(df, "../SourceData/EH47BCA/210510 EH47BCA_NRL.v1 2.rds")
chosenDFSourceFile <<- "EH47BCA"
pathTidyingReport <<- "../USER/EH47BCA/output"
df <- read_rds("../SourceData/EH47BCA/210510 EH47BCA_NRL.v1 2.rds")
# df <- rbind(df1, df2)
# df <- df2
filePath <- "../SourceData/EH47BCA/210510 EH47BCA_NRL_meta.xlsx"
df <- attachAttr(filePath, df)
# # 쓰레기 데이터 제거
# df <- df[df$Tensile_Shape %in% c("판상", "봉상"),]
#  factor 변수 지정
catVar <- c("TensileShape" ,"TensileSpecimenDirection", "Factory", "ManufaturingProcess",
"RollingMode", "RollingModeDirection", "SRT_FurnanceNo",
"RollingMeasureCode","NRL_FirstTest",
"CCMachine", "MslabCharicteristic", "TensileShapeCode")
for(var in catVar) {
df[,var] <- as.factor(df[,var])
}
filePath <- "../SourceData/EH47BCA/210510 EH47BCA_NRL_meta.xlsx"
df <- attachAttr(filePath, df)
# 생산월 데이터 추가
month <- month(unsticky(df$DecisionDate))
df <- df %>% mutate(month=month)
attr(df[,"month"],"label") <- "생산 월"
attr(df[,"month"],"labelShort") <- "생산 월"
attr(df[,"month"],"digit") <- 0
attr(df[,"month"],"validMin") <- 1
attr(df[,"month"],"validMax") <- 12
df <- addTransVarTaskSteelPlate(df)
df <- addTransVarEachEH47BCA(df)
df <- sticky_all(df)
dfAll <<- df
df <- removeVarEachEH47BCA(df)
df <- sticky_all(df)
DFSource <<- df
# attributes(DFSource)
write_rds(DFSource, "../SourceData/EH47BCA/210510 EH47BCA_NRL.v1 2_전처리.rds")
write_excel_csv(DFSource, path="../USER/EH47BCA/output/EH47BCA.csv", na="")
return(df)
}
addTransVarEachEH47BCA <- function(df) {
#maxSRT
df <- df %>% mutate( maxSRT = pmax(df$SRT_1stZoneTemp, df$SRT_2ndZoneTemp, df$SRT_3rdZoneTemp, df$SRT_HomogenousTemp))
attr(df[,"maxSRT"],"label") <- "최고 분위기 온도" ;
attr(df[,"maxSRT"], "labelShort") <- "최고 분위기 온도";
df <- df %>% mutate(rateReheatSlab = SRT_SlabTemp/SRT_SlabTotalTime) %>%
attachAttrOneVar(var="rateReheatSlab", label="급속가열도", labelShort="급속가열도")
tidyingList[["addedVar"]] <<- c(tidyingList[["addedVar"]], "maxSRT","rateReheatSlab")
return(df)
}
removeVarEachEH47BCA <- function(df) {
# varNA <- c("HeatTreatmentTemp", "HeatTreatmentTime")
# varNA <- c(varNA, "PWHTTemp", "PWHTTempRnage", "PWHTTime", "PWHTCycle","NORTemp", "NORTemp", "NORTime",
#            "NORCycle", "PWHTTemp_Add1", "PWHTTempRnage_Add1", "PWHTTime_Add1", "PWHTCycle_Add1", "NORTemp_Add1",
#            "NORTempRnage_Add1", "NORTime_Add1", "NORCycle_Add1", "PWHTTemp_Add2", "PWHTTempRnage_Add2",
#            "PWHTTime_Add2", "PWHTCycle_Add2", "NORTemp_Add2", "NORTempRnage_Add2", "NORTime_Add2",
#            "NORCycle_Add2")
# varNA <- c(varNA, "DWTTTempCode", "DWTTTemp", "DWTT_Ind1", "DWTT_Ind2", "DWTT_Ind3", "DWTT_Avg",
#            "HIC_CLR_Ind1", "HIC_CLR_Ind2", "HIC_CLR_Ind3", "HIC_CLR_Ind4", "HIC_CLR_Ind5", "HIC_CLR_Ind6",
#            "HIC_CLR_Ind7", "HIC_CLR_Ind8", "HIC_CLR_Ind9", "HIC_CTR_Ind1", "HIC_CTR_Ind2", "HIC_CTR_Ind3",
#            "HIC_CTR_Ind4", "HIC_CTR_Ind5", "HIC_CTR_Ind6", "HIC_CTR_Ind7", "HIC_CTR_Ind8", "HIC_CTR_Ind9")
# varNA <- c(varNA, "CVNTempCode", "CVNTempCode_Add1", "CVN_Ind3",
#            "CVNTempCode_Add2", "CVNTemp_Add2",  "CVN_Ind1_Add2", "CVN_Ind2_Add2", "CVN_Ind3_Add2", "CVN_Avg_Add2",
#            "CVNTempCode_Add3", "CVNTemp_Add3", "CVN_Ind1_Add3", "CVN_Ind2_Add3", "CVN_Ind3_Add3", "CVN_Avg_Add3")
varNA <- NULL
for(x in colnames(df)) {
if(sum(!is.na(df[,x]))==0) {
varNA <- c(varNA,x)
}
}
tidyingList[["removedVarNA"]] <<- varNA
removedVar <- c("ControlRollingCode", "ControlRollingMethod", "bControlRolling", "bRM")
tidyingList[["removedVar"]] <<- removedVar
tidyingList[["remainedVar"]] <<-
setdiff(colnames(df), c(tidyingList[["removedVar"]],tidyingList[["addedVar"]], tidyingList[["removedVarNA"]])  )
df <- df[,c(tidyingList[["remainedVar"]], tidyingList[["addedVar"]])]
# tidyingList[["remainedVar"]] <<- setdiff(colnames(df), tidyingList[["removedVar"]] )
# df <- df[,tidyingList[["remainedVar"]]]
return(df)
}
#                             skip=1, col_names=FALSE)
# write_rds(df, "../SourceData/EH47BCA/210510 EH47BCA_NRL.v1 2.rds")
chosenDFSourceFile <<- "EH47BCA"
pathTidyingReport <<- "../USER/EH47BCA/output"
df <- read_rds("../SourceData/EH47BCA/210510 EH47BCA_NRL.v1 2.rds")
# df <- rbind(df1, df2)
# df <- df2
filePath <- "../SourceData/EH47BCA/210510 EH47BCA_NRL_meta.xlsx"
df <- attachAttr(filePath, df)
# # 쓰레기 데이터 제거
# df <- df[df$Tensile_Shape %in% c("판상", "봉상"),]
#  factor 변수 지정
catVar <- c("TensileShape" ,"TensileSpecimenDirection", "Factory", "ManufaturingProcess",
"RollingMode", "RollingModeDirection", "SRT_FurnanceNo",
"RollingMeasureCode","NRL_FirstTest",
"CCMachine", "MslabCharicteristic", "TensileShapeCode")
for(var in catVar) {
df[,var] <- as.factor(df[,var])
}
filePath <- "../SourceData/EH47BCA/210510 EH47BCA_NRL_meta.xlsx"
df <- attachAttr(filePath, df)
# 생산월 데이터 추가
month <- month(unsticky(df$DecisionDate))
df <- df %>% mutate(month=month)
attr(df[,"month"],"label") <- "생산 월"
attr(df[,"month"],"labelShort") <- "생산 월"
attr(df[,"month"],"digit") <- 0
attr(df[,"month"],"validMin") <- 1
attr(df[,"month"],"validMax") <- 12
df <- addTransVarTaskSteelPlate(df)
df <- addTransVarEachEH47BCA(df)
df <- sticky_all(df)
dfAll <<- df
df <- removeVarEachEH47BCA(df)
View(tidyingList)
df <- dfAll
varName <- colnames(df)
dfTable <- data.frame(varName=varName)
label <- rep(NA,dim(df)[2])
labelShort <- rep(NA,dim(df)[2])
validMin <- rep(NA,dim(df)[2])
validMax <- rep(NA,dim(df)[2])
min <- rep(NA,dim(df)[2])
max <- rep(NA,dim(df)[2])
mean <- rep(NA,dim(df)[2])
digit <- rep(NA,dim(df)[2])
# unit <- rep(NA,dim(df)[2])
category <- rep(NA,dim(df)[2])
for( i in seq(length(label))) {
label[i] <- attr(df[,i],"label")
labelShort[i] <- attr(df[,i],"labelShort")
# validMin[i] <- attr(df[,i],"validMin")
# validMax[i] <- attr(df[,i],"validMax")
# min[i] <- attr(df[,i],"min")
# max[i] <- attr(df[,i],"max")
# mean[i] <- attr(df[,i],"mean")
# digit[i] <- attr(df[,i],"digit")
if(varName[i] %in% tidyingList[["removedVar"]]) {
category[i] <- "제거"
} else if(varName[i] %in% tidyingList[["remainedVar"]]) {
category[i] <- "잔류"
} else if(varName[i] %in% tidyingList[["addedVar"]]) {
category[i] <- "추가"
} else if(varName[i] %in% tidyingList[["removedVarNA"]]) {
category[i] <- "제거NA"
}
}
dfTable <- dfTable %>% mutate(lable=label, labelShort=labelShort, category=category)
table(df$category)
table(dfTable$category)
DT::datatable(dfTable)
runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
library(shiny); runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
library(shiny); runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
library(shiny); runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
View(aesList)
View(curSampleExplore)
runApp('SmartSolutionMain.R')
library(shiny); runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
summary(DFSource$mpg)
summary(DFSource$wt)
runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
summary(DFSource$hp)
runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
runApp('SmartSolutionMain.R')
View(aesList)
View(aesList)
runApp('SmartSolutionMain.R')
View(aesList)
runApp('SmartSolutionMain.R')
View(aesList)
aesList[["x"]]
aesList[["y"]]
runApp('SmartSolutionMain.R')
